import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  UpdateVocabularyFilterRequest,
  UpdateVocabularyFilterResponse,
} from "../models/models_0";
import {
  ServiceInputTypes,
  ServiceOutputTypes,
  TranscribeClientResolvedConfig,
} from "../TranscribeClient";
export { __MetadataBearer, $Command };
export interface UpdateVocabularyFilterCommandInput
  extends UpdateVocabularyFilterRequest {}
export interface UpdateVocabularyFilterCommandOutput
  extends UpdateVocabularyFilterResponse,
    __MetadataBearer {}
export declare class UpdateVocabularyFilterCommand extends $Command<
  UpdateVocabularyFilterCommandInput,
  UpdateVocabularyFilterCommandOutput,
  TranscribeClientResolvedConfig
> {
  readonly input: UpdateVocabularyFilterCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UpdateVocabularyFilterCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: TranscribeClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    UpdateVocabularyFilterCommandInput,
    UpdateVocabularyFilterCommandOutput
  >;
  private serialize;
  private deserialize;
}
